{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNq3eD4c4AEiDsWAsW595RU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Cohort Analysis**"],"metadata":{"id":"fiu7rRtDeq7n"}},{"cell_type":"markdown","source":["### **Add Data**"],"metadata":{"id":"1DvT8KKhdBQE"}},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"jgwhJzNbZa5k","executionInfo":{"status":"ok","timestamp":1752674566563,"user_tz":-420,"elapsed":791,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"830f2319-27b8-480e-adcd-02596789a2db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country  \n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  "],"text/html":["\n","  <div id=\"df-889cef85-fb13-44b0-847e-c7333d6e5707\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-889cef85-fb13-44b0-847e-c7333d6e5707')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-889cef85-fb13-44b0-847e-c7333d6e5707 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-889cef85-fb13-44b0-847e-c7333d6e5707');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d79932a8-7cbd-421c-9c55-1a73017a7352\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d79932a8-7cbd-421c-9c55-1a73017a7352')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d79932a8-7cbd-421c-9c55-1a73017a7352 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":3}],"source":["import pandas as pd\n","import numpy as np\n","data = pd.read_csv('data.csv',engine='python',encoding='ISO-8859-1')\n","data.head()"]},{"cell_type":"markdown","source":["### **Reformat Timestamp**\n","Reformat timestamp diperlukan dalam pembuatan cohort analysis karena data yang diambil biasanya tersedia dalam format waktu yang lebih detail seperti bulanan, mingguan atau bahkan harian.\n","\n","Jika data dalam format waktu ini tidak direformat, maka akan sulit untuk mengelompokkan pengguna ke dalam cohort berdasarkan bulan atau minggu tertentu, yang merupakan bagian penting dari analisis cohort.\n","\n","Dengan reformat timestamp, kita dapat mengubah data waktu yang awalnya berupa informasi timestamp menjadi informasi bulan atau minggu dan kemudian kita dapat mengelompokkan pengguna berdasarkan bulan atau minggu tertentu di mana mereka bergabung dengan produk atau layanan."],"metadata":{"id":"30mnyxmdeS-_"}},{"cell_type":"code","source":["import dateutil # Untuk mem-parsing string menjadi datetime\n","from datetime import datetime as dt # Untuk ekstrak informasi waktu (bulan/tahun)\n","from pytz import utc # Untuk memastikan waktu ditangani dalam zona UTC\n","\n","data['datetime'] = data['InvoiceDate'].apply(lambda x: dateutil.parser.parse(x).timestamp())\n","\n","data['month'] = data['datetime'].apply(lambda x: dt.fromtimestamp(x, utc).month)\n","\n","data['year'] = data['datetime'].apply(lambda x: dt.fromtimestamp(x, utc).year)\n","\n","data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"pvIqI1oTZ1kH","executionInfo":{"status":"ok","timestamp":1752675231127,"user_tz":-420,"elapsed":6023,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"7bb6f30f-d60a-4ce2-bc99-0e6a83ecd20a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country      datetime  month  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  1.291192e+09     12   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  1.291192e+09     12   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","\n","   year  \n","0  2010  \n","1  2010  \n","2  2010  \n","3  2010  \n","4  2010  "],"text/html":["\n","  <div id=\"df-3ac61d4a-f43d-4039-9c7e-b0e530cee4a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>datetime</th>\n","      <th>month</th>\n","      <th>year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ac61d4a-f43d-4039-9c7e-b0e530cee4a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ac61d4a-f43d-4039-9c7e-b0e530cee4a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ac61d4a-f43d-4039-9c7e-b0e530cee4a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8678f0d1-cc12-406a-88d2-9beb113bf5db\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8678f0d1-cc12-406a-88d2-9beb113bf5db')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8678f0d1-cc12-406a-88d2-9beb113bf5db button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["### **Membuat Cohort**"],"metadata":{"id":"8yGe2TmRiVFf"}},{"cell_type":"code","source":["# ‘AUG 2010’\n","# ‘2010 AUG’\n","# AUG 2010 -> 201008\n","data['cohort'] = data.apply(lambda row: (row['year'] * 100) + (row['month']), axis=1)\n","# 2010 * 100 = 201000\n","# aug -> 201000 + 08 = 201008\n","\n","cohorts = data.groupby('CustomerID')['cohort'].min().reset_index()\n","# Mengelompokkan (groupby) data berdasarkan CustomerID.\n","# Lalu dari setiap customer, diambil nilai cohort yang paling awal (terkecil),\n","# artinya bulan pertama kali customer tersebut melakukan transaksi.\n","\n","cohorts.columns = ['CustomerID', 'first_cohort']\n","# Mengganti nama kolom cohort menjadi first_cohort,\n","# agar lebih jelas menunjukkan bahwa itu adalah bulan pertama transaksi pelanggan.\n","\n","data = data.merge(cohorts, on='CustomerID', how='left')\n","# Menambahkan kolom first_cohort ke setiap transaksi customer di data,\n","# agar tahu bulan pertama customer tersebut mulai belanja.\n","\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"f64CnsKeba5B","executionInfo":{"status":"ok","timestamp":1752675920074,"user_tz":-420,"elapsed":835,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"f69bad0f-ee99-42a2-accf-7c6463cc2e9e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country      datetime  month  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  1.291192e+09     12   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  1.291192e+09     12   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","\n","   year  cohort  first_cohort  \n","0  2010  201012      201012.0  \n","1  2010  201012      201012.0  \n","2  2010  201012      201012.0  \n","3  2010  201012      201012.0  \n","4  2010  201012      201012.0  "],"text/html":["\n","  <div id=\"df-b2aee464-3dde-448c-81bb-d8f99164b592\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>datetime</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>cohort</th>\n","      <th>first_cohort</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2aee464-3dde-448c-81bb-d8f99164b592')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b2aee464-3dde-448c-81bb-d8f99164b592 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b2aee464-3dde-448c-81bb-d8f99164b592');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-787ef5fc-ea8e-4e98-98d2-4baf59baf629\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-787ef5fc-ea8e-4e98-98d2-4baf59baf629')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-787ef5fc-ea8e-4e98-98d2-4baf59baf629 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### **Membuat Header Cohort**\n","\n","Membuat header untuk setiap cohort dalam codingan Python pada cohort analysis berguna untuk memberikan konteks dan informasi yang lebih jelas tentang cohort yang sedang dianalisis.\n","\n","Informasi pada header\n","* Periode waktu / kategori cohort tertentu yang sedang di analisis\n","* Ukuran sampel\n","* Rentang usia\n","* Jenis kelamin cohort yang sedang di analisis\n","\n","Informasi yang ada pada header dapat memudahkan kita dalam memahami hasil analisis yang ditampilkan dan membuat keputusan bisnis yang lebih tepat berdasarkan hasil analisis."],"metadata":{"id":"qRdHGADeonll"}},{"cell_type":"code","source":["headers = data['cohort'].value_counts().reset_index()\n","# Menghitung berapa banyak transaksi yang terjadi di setiap bulan cohort\n","\n","headers.columns = ['Cohorts', 'Count']\n","# Mengganti nama kolom agar lebih deskriptif:\n","\n","headers.head()\n","headers = headers.sort_values(['Cohorts'])['Cohorts'].to_list()\n","# Mengurutkan cohort dari yang paling awal ke paling akhir,\n","# lalu mengubahnya menjadi list berisi nilai cohort.\n","\n","headers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7z1Z6MSYbuqs","executionInfo":{"status":"ok","timestamp":1752676278015,"user_tz":-420,"elapsed":9,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"88aad517-7c02-4729-b2f2-770ace2dff49"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[201012, 201101, 201102]"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["### **Pivot Data Cohort**\n","\n","Dalam cohort analysis, pivot table dapat digunakan untuk membandingkan perilaku pelanggan antar cohort.\n","\n","Contoh:\n","* Membangkan persentase pelanggan yang melakukan pembelian ulang di setiap cohort\n","* Membandingkan rata-rata jumlah pembelian di setiap cohort\n","\n","Dengan melakukan pivot data, informasi yang relevan dapat dikelompokkan dan dibandingkan, sehingga dapat memberikan wawasan lebih dalam tentang kinerja bisnis di setiap cohort."],"metadata":{"id":"Ds2V-muOqg0S"}},{"cell_type":"code","source":["data.dropna(inplace=True)"],"metadata":{"id":"qrkPJNFeq-JS","executionInfo":{"status":"ok","timestamp":1752676309696,"user_tz":-420,"elapsed":50,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["data['cohort_distance'] = data.apply(lambda row: (headers.index(row['cohort']) - headers.index(row['first_cohort'])) if (row['first_cohort'] != 0 and row['cohort'] != 0) else np.nan, axis=1)"],"metadata":{"id":"BeQuiMiQc-q3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Baris kode tersebut merupakan implementasi dari bagian yang terkait dengan perhitungan jarak atau selisih antara tanggal bergabung pertama (first_cohort) dengan tanggal bergabung kembali (cohort).\n","\n","Fungsinya adalah untuk menambahkan kolom baru bernama 'cohort_distance' pada dataset, di mana setiap barisnya akan dihitung dengan rumus yang ada di dalam fungsi lambda. Jarak antar dua tanggal tersebut dihitung berdasarkan posisi kolom dari tanggal cohort dan tanggal first_cohort di dalam dataset."],"metadata":{"id":"F6HkVV6irmIX"}},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"5fs6ki1Ts_ch","executionInfo":{"status":"ok","timestamp":1751335044094,"user_tz":-420,"elapsed":118,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"cb4f6045-70c5-44fe-c7f5-e71118cfe0d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country      datetime  month  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  1.291192e+09     12   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  1.291192e+09     12   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  1.291192e+09     12   \n","\n","   year  cohort  first_cohort_x  first_cohort_y  first_cohort  cohort_distance  \n","0  2010  201012        201012.0        201012.0      201012.0                0  \n","1  2010  201012        201012.0        201012.0      201012.0                0  \n","2  2010  201012        201012.0        201012.0      201012.0                0  \n","3  2010  201012        201012.0        201012.0      201012.0                0  \n","4  2010  201012        201012.0        201012.0      201012.0                0  "],"text/html":["\n","  <div id=\"df-439a4c49-af4c-4d66-9d24-e9a626cec28e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>datetime</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>cohort</th>\n","      <th>first_cohort_x</th>\n","      <th>first_cohort_y</th>\n","      <th>first_cohort</th>\n","      <th>cohort_distance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>1.291192e+09</td>\n","      <td>12</td>\n","      <td>2010</td>\n","      <td>201012</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>201012.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-439a4c49-af4c-4d66-9d24-e9a626cec28e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-439a4c49-af4c-4d66-9d24-e9a626cec28e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-439a4c49-af4c-4d66-9d24-e9a626cec28e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-98266a32-afa3-408f-a9fe-a9bd5ed96d51\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-98266a32-afa3-408f-a9fe-a9bd5ed96d51')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-98266a32-afa3-408f-a9fe-a9bd5ed96d51 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["cohort_pivot = pd.pivot_table(data, index='first_cohort', columns='cohort_distance', values='CustomerID', aggfunc=pd.Series.nunique)"],"metadata":{"id":"-gf8cDuicdvn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* **index='first_cohort':** menjadikan kolom 'first_cohort' sebagai indeks pada tabel pivot\n","* **columns='cohort_distance':** menjadikan kolom 'cohort_distance' sebagai kolom pada pivot table\n","* v**alues='CustomerID':** nilai pada pivot table diisi dengan jumlah CustomerID yang termasuk ke dalam masing-masing kolom cohort_distance dan index first_cohort.\n","* **aggfunc=pd.Series.nunique:** menjumlahkan jumlah CustomerID yang unik pada setiap sel dalam pivot table."],"metadata":{"id":"DLA91_-WtRMD"}},{"cell_type":"code","source":["cohort_pivot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"tKk54x4jsyuc","executionInfo":{"status":"ok","timestamp":1751335194854,"user_tz":-420,"elapsed":129,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"3de1f1ec-98d2-4ae7-f618-d4d8485cfd3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["cohort_distance     0      1      2      3      4      5      6      7   \\\n","first_cohort                                                              \n","201012.0         948.0  362.0  317.0  367.0  341.0  376.0  360.0  336.0   \n","201101.0         421.0  101.0  119.0  102.0  138.0  126.0  110.0  108.0   \n","201102.0         380.0   94.0   73.0  106.0  102.0   94.0   97.0  107.0   \n","201103.0         440.0   84.0  112.0   96.0  102.0   78.0  116.0  105.0   \n","201104.0         299.0   68.0   66.0   63.0   62.0   71.0   69.0   78.0   \n","201105.0         279.0   66.0   48.0   48.0   60.0   68.0   74.0   29.0   \n","201106.0         235.0   49.0   44.0   64.0   58.0   79.0   24.0    NaN   \n","201107.0         191.0   40.0   39.0   44.0   52.0   22.0    NaN    NaN   \n","201108.0         167.0   42.0   42.0   42.0   23.0    NaN    NaN    NaN   \n","201109.0         298.0   89.0   97.0   36.0    NaN    NaN    NaN    NaN   \n","201110.0         352.0   93.0   46.0    NaN    NaN    NaN    NaN    NaN   \n","201111.0         321.0   43.0    NaN    NaN    NaN    NaN    NaN    NaN   \n","201112.0          41.0    NaN    NaN    NaN    NaN    NaN    NaN    NaN   \n","\n","cohort_distance     8      9      10     11     12  \n","first_cohort                                        \n","201012.0         336.0  374.0  354.0  474.0  260.0  \n","201101.0         131.0  146.0  155.0   63.0    NaN  \n","201102.0          98.0  119.0   35.0    NaN    NaN  \n","201103.0         127.0   39.0    NaN    NaN    NaN  \n","201104.0          25.0    NaN    NaN    NaN    NaN  \n","201105.0           NaN    NaN    NaN    NaN    NaN  \n","201106.0           NaN    NaN    NaN    NaN    NaN  \n","201107.0           NaN    NaN    NaN    NaN    NaN  \n","201108.0           NaN    NaN    NaN    NaN    NaN  \n","201109.0           NaN    NaN    NaN    NaN    NaN  \n","201110.0           NaN    NaN    NaN    NaN    NaN  \n","201111.0           NaN    NaN    NaN    NaN    NaN  \n","201112.0           NaN    NaN    NaN    NaN    NaN  "],"text/html":["\n","  <div id=\"df-01c2a7d6-7077-4586-97cf-0eb44873b2d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>cohort_distance</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","    <tr>\n","      <th>first_cohort</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>201012.0</th>\n","      <td>948.0</td>\n","      <td>362.0</td>\n","      <td>317.0</td>\n","      <td>367.0</td>\n","      <td>341.0</td>\n","      <td>376.0</td>\n","      <td>360.0</td>\n","      <td>336.0</td>\n","      <td>336.0</td>\n","      <td>374.0</td>\n","      <td>354.0</td>\n","      <td>474.0</td>\n","      <td>260.0</td>\n","    </tr>\n","    <tr>\n","      <th>201101.0</th>\n","      <td>421.0</td>\n","      <td>101.0</td>\n","      <td>119.0</td>\n","      <td>102.0</td>\n","      <td>138.0</td>\n","      <td>126.0</td>\n","      <td>110.0</td>\n","      <td>108.0</td>\n","      <td>131.0</td>\n","      <td>146.0</td>\n","      <td>155.0</td>\n","      <td>63.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201102.0</th>\n","      <td>380.0</td>\n","      <td>94.0</td>\n","      <td>73.0</td>\n","      <td>106.0</td>\n","      <td>102.0</td>\n","      <td>94.0</td>\n","      <td>97.0</td>\n","      <td>107.0</td>\n","      <td>98.0</td>\n","      <td>119.0</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201103.0</th>\n","      <td>440.0</td>\n","      <td>84.0</td>\n","      <td>112.0</td>\n","      <td>96.0</td>\n","      <td>102.0</td>\n","      <td>78.0</td>\n","      <td>116.0</td>\n","      <td>105.0</td>\n","      <td>127.0</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201104.0</th>\n","      <td>299.0</td>\n","      <td>68.0</td>\n","      <td>66.0</td>\n","      <td>63.0</td>\n","      <td>62.0</td>\n","      <td>71.0</td>\n","      <td>69.0</td>\n","      <td>78.0</td>\n","      <td>25.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201105.0</th>\n","      <td>279.0</td>\n","      <td>66.0</td>\n","      <td>48.0</td>\n","      <td>48.0</td>\n","      <td>60.0</td>\n","      <td>68.0</td>\n","      <td>74.0</td>\n","      <td>29.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201106.0</th>\n","      <td>235.0</td>\n","      <td>49.0</td>\n","      <td>44.0</td>\n","      <td>64.0</td>\n","      <td>58.0</td>\n","      <td>79.0</td>\n","      <td>24.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201107.0</th>\n","      <td>191.0</td>\n","      <td>40.0</td>\n","      <td>39.0</td>\n","      <td>44.0</td>\n","      <td>52.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201108.0</th>\n","      <td>167.0</td>\n","      <td>42.0</td>\n","      <td>42.0</td>\n","      <td>42.0</td>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201109.0</th>\n","      <td>298.0</td>\n","      <td>89.0</td>\n","      <td>97.0</td>\n","      <td>36.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201110.0</th>\n","      <td>352.0</td>\n","      <td>93.0</td>\n","      <td>46.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201111.0</th>\n","      <td>321.0</td>\n","      <td>43.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201112.0</th>\n","      <td>41.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01c2a7d6-7077-4586-97cf-0eb44873b2d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-01c2a7d6-7077-4586-97cf-0eb44873b2d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-01c2a7d6-7077-4586-97cf-0eb44873b2d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-de149e47-ceaa-458d-a6a3-e3a5e2f84548\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de149e47-ceaa-458d-a6a3-e3a5e2f84548')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-de149e47-ceaa-458d-a6a3-e3a5e2f84548 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_ffcaca0f-ffeb-491b-bdb1-6364f030473d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cohort_pivot')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ffcaca0f-ffeb-491b-bdb1-6364f030473d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cohort_pivot');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cohort_pivot","summary":"{\n  \"name\": \"cohort_pivot\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"first_cohort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.43594095845605,\n        \"min\": 201012.0,\n        \"max\": 201112.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          201111.0,\n          201109.0,\n          201012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 213.67318682799387,\n        \"min\": 41.0,\n        \"max\": 948.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          321.0,\n          298.0,\n          948.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.23231782273857,\n        \"min\": 40.0,\n        \"max\": 362.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          93.0,\n          89.0,\n          362.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80.29547706043994,\n        \"min\": 39.0,\n        \"max\": 317.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          48.0,\n          317.0,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.43644311601943,\n        \"min\": 36.0,\n        \"max\": 367.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          42.0,\n          102.0,\n          48.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 95.14039333765886,\n        \"min\": 23.0,\n        \"max\": 341.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          138.0,\n          58.0,\n          341.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109.63413180731106,\n        \"min\": 22.0,\n        \"max\": 376.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          126.0,\n          68.0,\n          376.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109.6689824621607,\n        \"min\": 24.0,\n        \"max\": 360.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          360.0,\n          110.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106.70598233776148,\n        \"min\": 29.0,\n        \"max\": 336.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          336.0,\n          108.0,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115.75534544892517,\n        \"min\": 25.0,\n        \"max\": 336.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          131.0,\n          25.0,\n          98.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 143.7045580348793,\n        \"min\": 39.0,\n        \"max\": 374.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          146.0,\n          39.0,\n          374.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 161.1221069044634,\n        \"min\": 35.0,\n        \"max\": 354.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          354.0,\n          155.0,\n          35.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 290.62088706767105,\n        \"min\": 63.0,\n        \"max\": 474.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          63.0,\n          474.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 12,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 260.0,\n        \"max\": 260.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          260.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["cohort_pivot = cohort_pivot.div(cohort_pivot[0],axis=0)"],"metadata":{"id":"g5KEbmKItk7V"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Pada syntax tersebut, cohort_pivot dihasilkan dari pivot table yang telah dibuat sebelumnya. Kemudian dilakukan normalisasi nilai pada setiap kolom dengan menggunakan nilai pada kolom pertama (kolom dengan indeks 0) sebagai pembagi, yaitu cohort_pivot[0].\n","\n","Tujuannya adalah untuk memperoleh nilai persentase dari jumlah customer yang masih aktif pada setiap periode berdasarkan jumlah customer yang bergabung pada periode awal. Dengan kata lain, dilakukan perbandingan jumlah customer aktif pada setiap periode terhadap jumlah customer yang bergabung pada periode awal."],"metadata":{"id":"rQR1ZN8UuBiH"}},{"cell_type":"code","source":["cohort_pivot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"id":"OXSIbMo0uDhI","executionInfo":{"status":"ok","timestamp":1751335372796,"user_tz":-420,"elapsed":128,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"7ace3fb9-34e6-4b2a-f1b0-2caf3a3b4825"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["cohort_distance   0         1         2         3         4         5   \\\n","first_cohort                                                             \n","201012.0         1.0  0.381857  0.334388  0.387131  0.359705  0.396624   \n","201101.0         1.0  0.239905  0.282660  0.242280  0.327791  0.299287   \n","201102.0         1.0  0.247368  0.192105  0.278947  0.268421  0.247368   \n","201103.0         1.0  0.190909  0.254545  0.218182  0.231818  0.177273   \n","201104.0         1.0  0.227425  0.220736  0.210702  0.207358  0.237458   \n","201105.0         1.0  0.236559  0.172043  0.172043  0.215054  0.243728   \n","201106.0         1.0  0.208511  0.187234  0.272340  0.246809  0.336170   \n","201107.0         1.0  0.209424  0.204188  0.230366  0.272251  0.115183   \n","201108.0         1.0  0.251497  0.251497  0.251497  0.137725       NaN   \n","201109.0         1.0  0.298658  0.325503  0.120805       NaN       NaN   \n","201110.0         1.0  0.264205  0.130682       NaN       NaN       NaN   \n","201111.0         1.0  0.133956       NaN       NaN       NaN       NaN   \n","201112.0         1.0       NaN       NaN       NaN       NaN       NaN   \n","\n","cohort_distance        6         7         8         9         10        11  \\\n","first_cohort                                                                  \n","201012.0         0.379747  0.354430  0.354430  0.394515  0.373418  0.500000   \n","201101.0         0.261283  0.256532  0.311164  0.346793  0.368171  0.149644   \n","201102.0         0.255263  0.281579  0.257895  0.313158  0.092105       NaN   \n","201103.0         0.263636  0.238636  0.288636  0.088636       NaN       NaN   \n","201104.0         0.230769  0.260870  0.083612       NaN       NaN       NaN   \n","201105.0         0.265233  0.103943       NaN       NaN       NaN       NaN   \n","201106.0         0.102128       NaN       NaN       NaN       NaN       NaN   \n","201107.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","201108.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","201109.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","201110.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","201111.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","201112.0              NaN       NaN       NaN       NaN       NaN       NaN   \n","\n","cohort_distance        12  \n","first_cohort               \n","201012.0         0.274262  \n","201101.0              NaN  \n","201102.0              NaN  \n","201103.0              NaN  \n","201104.0              NaN  \n","201105.0              NaN  \n","201106.0              NaN  \n","201107.0              NaN  \n","201108.0              NaN  \n","201109.0              NaN  \n","201110.0              NaN  \n","201111.0              NaN  \n","201112.0              NaN  "],"text/html":["\n","  <div id=\"df-0ca7f967-1502-4173-afd2-5a963be12598\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>cohort_distance</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","    <tr>\n","      <th>first_cohort</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>201012.0</th>\n","      <td>1.0</td>\n","      <td>0.381857</td>\n","      <td>0.334388</td>\n","      <td>0.387131</td>\n","      <td>0.359705</td>\n","      <td>0.396624</td>\n","      <td>0.379747</td>\n","      <td>0.354430</td>\n","      <td>0.354430</td>\n","      <td>0.394515</td>\n","      <td>0.373418</td>\n","      <td>0.500000</td>\n","      <td>0.274262</td>\n","    </tr>\n","    <tr>\n","      <th>201101.0</th>\n","      <td>1.0</td>\n","      <td>0.239905</td>\n","      <td>0.282660</td>\n","      <td>0.242280</td>\n","      <td>0.327791</td>\n","      <td>0.299287</td>\n","      <td>0.261283</td>\n","      <td>0.256532</td>\n","      <td>0.311164</td>\n","      <td>0.346793</td>\n","      <td>0.368171</td>\n","      <td>0.149644</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201102.0</th>\n","      <td>1.0</td>\n","      <td>0.247368</td>\n","      <td>0.192105</td>\n","      <td>0.278947</td>\n","      <td>0.268421</td>\n","      <td>0.247368</td>\n","      <td>0.255263</td>\n","      <td>0.281579</td>\n","      <td>0.257895</td>\n","      <td>0.313158</td>\n","      <td>0.092105</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201103.0</th>\n","      <td>1.0</td>\n","      <td>0.190909</td>\n","      <td>0.254545</td>\n","      <td>0.218182</td>\n","      <td>0.231818</td>\n","      <td>0.177273</td>\n","      <td>0.263636</td>\n","      <td>0.238636</td>\n","      <td>0.288636</td>\n","      <td>0.088636</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201104.0</th>\n","      <td>1.0</td>\n","      <td>0.227425</td>\n","      <td>0.220736</td>\n","      <td>0.210702</td>\n","      <td>0.207358</td>\n","      <td>0.237458</td>\n","      <td>0.230769</td>\n","      <td>0.260870</td>\n","      <td>0.083612</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201105.0</th>\n","      <td>1.0</td>\n","      <td>0.236559</td>\n","      <td>0.172043</td>\n","      <td>0.172043</td>\n","      <td>0.215054</td>\n","      <td>0.243728</td>\n","      <td>0.265233</td>\n","      <td>0.103943</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201106.0</th>\n","      <td>1.0</td>\n","      <td>0.208511</td>\n","      <td>0.187234</td>\n","      <td>0.272340</td>\n","      <td>0.246809</td>\n","      <td>0.336170</td>\n","      <td>0.102128</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201107.0</th>\n","      <td>1.0</td>\n","      <td>0.209424</td>\n","      <td>0.204188</td>\n","      <td>0.230366</td>\n","      <td>0.272251</td>\n","      <td>0.115183</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201108.0</th>\n","      <td>1.0</td>\n","      <td>0.251497</td>\n","      <td>0.251497</td>\n","      <td>0.251497</td>\n","      <td>0.137725</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201109.0</th>\n","      <td>1.0</td>\n","      <td>0.298658</td>\n","      <td>0.325503</td>\n","      <td>0.120805</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201110.0</th>\n","      <td>1.0</td>\n","      <td>0.264205</td>\n","      <td>0.130682</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201111.0</th>\n","      <td>1.0</td>\n","      <td>0.133956</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>201112.0</th>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ca7f967-1502-4173-afd2-5a963be12598')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ca7f967-1502-4173-afd2-5a963be12598 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ca7f967-1502-4173-afd2-5a963be12598');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ff12d4ed-602f-4e9a-ac4f-d780ccab38fd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff12d4ed-602f-4e9a-ac4f-d780ccab38fd')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ff12d4ed-602f-4e9a-ac4f-d780ccab38fd button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_f8da13b4-ab48-4293-a233-5ad2ffba6093\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cohort_pivot')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f8da13b4-ab48-4293-a233-5ad2ffba6093 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cohort_pivot');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cohort_pivot","summary":"{\n  \"name\": \"cohort_pivot\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"first_cohort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.43594095845605,\n        \"min\": 201012.0,\n        \"max\": 201112.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          201111.0,\n          201109.0,\n          201012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0603619107650311,\n        \"min\": 0.13395638629283488,\n        \"max\": 0.3818565400843882,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.26420454545454547\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06405943319029997,\n        \"min\": 0.13068181818181818,\n        \"max\": 0.33438818565400846,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.17204301075268819\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0703765207729437,\n        \"min\": 0.12080536912751678,\n        \"max\": 0.3871308016877637,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.25149700598802394\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06602582986566283,\n        \"min\": 0.1377245508982036,\n        \"max\": 0.35970464135021096,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.27225130890052357\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08837365480719396,\n        \"min\": 0.11518324607329843,\n        \"max\": 0.39662447257383965,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2992874109263658\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08127526079882423,\n        \"min\": 0.10212765957446808,\n        \"max\": 0.379746835443038,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.379746835443038\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08188156136931209,\n        \"min\": 0.1039426523297491,\n        \"max\": 0.35443037974683544,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.35443037974683544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10424537488162391,\n        \"min\": 0.08361204013377926,\n        \"max\": 0.35443037974683544,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.31116389548693585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13559872287421046,\n        \"min\": 0.08863636363636364,\n        \"max\": 0.39451476793248946,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.34679334916864607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16092261595406396,\n        \"min\": 0.09210526315789473,\n        \"max\": 0.37341772151898733,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.37341772151898733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24773931169837474,\n        \"min\": 0.1496437054631829,\n        \"max\": 0.5,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.1496437054631829\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 12,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.2742616033755274,\n        \"max\": 0.2742616033755274,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2742616033755274\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### **Visualisasi Cohort pada Heatmap**"],"metadata":{"id":"dLi5DmoDueo0"}},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","fig_dims = (12, 8)\n","\n","fig, ax = plt.subplots(figsize=fig_dims)\n","\n","sns.heatmap(\n","    cohort_pivot,\n","    annot=True,\n","    fmt='.0%',\n","    mask=cohort_pivot.isnull(),\n","    ax=ax,\n","    square=True,\n","    linewidths=0.5,\n","    cmap=sns.cubehelix_palette(8)\n",")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":701},"id":"LSeLLKbguQYT","executionInfo":{"status":"ok","timestamp":1751335836356,"user_tz":-420,"elapsed":1020,"user":{"displayName":"Rifqi Al-Wafi","userId":"06105438248196131540"}},"outputId":"18139c60-b618-43f9-e379-e9f17c0ba541"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"JMQ3pjbIusbM"},"execution_count":null,"outputs":[]}]}